using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Diagnostics;
using System.IO;

namespace TMTech.Shared.CallPython.Test
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void TestMethod1()
        {
            var result = PythonRunner.GetSimplaeInt();
            Assert.IsTrue(result == 100);
        }

        [TestMethod]
        public void TestPython1()
        {

        }

        public string run_cmd(string cmd, string args)
        {
            ProcessStartInfo start = new ProcessStartInfo();

            start.FileName = "PATH_TO_PYTHON_EXE";
            start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.UseShellExecute = false;                      // do not use os shell
            start.CreateNoWindow = true;                        // don't need new window
            start.RedirectStandardOutput = true;                // any output, generated by application will be redirected back
            start.RedirectStandardError = true;                 // any error in standard out will be redirected back (for example exceptions)

            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    // Here are the exceptions from out Python script
                    string stderr = process.StandardError.ReadToEnd();

                    // here is the result of StdOut (for example: print "test")
                    string result = reader.ReadToEnd();
                    return result;
                }
            }
        }
    }
}
